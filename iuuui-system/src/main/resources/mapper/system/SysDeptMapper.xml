<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.iuuui.dao.system.SysDeptDao">

	<resultMap id="baseResultMap" type="com.iuuui.domain.system.SysDept">
		<result property="id" column="id" />
		<result property="parentId" column="parent_id" />
		<result property="name" column="name" />
		<result property="key" column="key" />
		<result property="leaderUserId" column="leader_user_id" />
		<result property="status" column="status" />
		<result property="createUserId" column="create_user_id" />
		<result property="createTime" column="create_time" />
		<result property="updateUserId" column="update_user_id" />
		<result property="updateTime" column="update_time" />
	</resultMap>

    <sql id="fields">  id,  parent_id,  name,  key,  leader_user_id,  status,  create_user_id,  create_time,  update_user_id,  update_time  </sql>

    <sql id="table_name">sys_dept</sql>

    <sql id="selector">
        select <include refid="fields"/> from <include refid="table_name"/>
    </sql>

    <delete id="deleteM">
        DELETE FROM <include refid="table_name"/>
        WHERE id = #{id}
    </delete>

    <insert id="createM" useGeneratedKeys="true" keyProperty="id" parameterType="com.iuuui.domain.system.SysDept">
		INSERT INTO <include refid="table_name"/>(<include refid="fields"/>)
        VALUES (  #{id},  #{parentId},  #{name},  #{key},  #{leaderUserId},  #{status},  #{createUserId},  #{createTime},  #{updateUserId},  #{updateTime}  )
	</insert>

    <update id="updateM" parameterType="com.iuuui.domain.system.SysDept">
        UPDATE
        <include refid="table_name"/>
        <set>
            <if test="parentId != null ">
              parent_id = #{parentId},
            </if>
            <if test="name != null ">
              name = #{name},
            </if>
            <if test="key != null ">
              key = #{key},
            </if>
            <if test="leaderUserId != null ">
              leader_user_id = #{leaderUserId},
            </if>
            <if test="status != null ">
              status = #{status},
            </if>
            <if test="createUserId != null ">
              create_user_id = #{createUserId},
            </if>
            <if test="createTime != null ">
              create_time = #{createTime},
            </if>
            <if test="updateUserId != null ">
              update_user_id = #{updateUserId},
            </if>
            <if test="updateTime != null ">
              update_time = #{updateTime}
            </if>
          </set>
        where id = #{id}
    </update>

    <select id="getByIdM" resultMap="baseResultMap">
        <include refid="selector"/>
        WHERE id = #{id}
    </select>

    <select id="countM" resultType="java.lang.Long">
        select
        count(*)
        from
        <include refid="table_name"/>
        <where>
            <if test="id != null and id !='' ">
                and id = #{id}
            </if>
            <if test="parentId != null and parentId !='' ">
                and parent_id = #{parentId}
            </if>
            <if test="name != null and name !='' ">
                and name = #{name}
            </if>
            <if test="key != null and key !='' ">
                and key = #{key}
            </if>
            <if test="leaderUserId != null and leaderUserId !='' ">
                and leader_user_id = #{leaderUserId}
            </if>
            <if test="status != null and status !='' ">
                and status = #{status}
            </if>
            <if test="createUserId != null and createUserId !='' ">
                and create_user_id = #{createUserId}
            </if>
            <if test="createTime != null and createTime !='' ">
                and create_time = #{createTime}
            </if>
            <if test="updateUserId != null and updateUserId !='' ">
                and update_user_id = #{updateUserId}
            </if>
            <if test="updateTime != null and updateTime !='' ">
                and update_time = #{updateTime}
            </if>
        </where>
</select>

    <select id="selectM" resultMap="baseResultMap">
        <include refid="selector"/>
        <where>
            <if test="id != null and id !='' ">
                  and id = #{id}
            </if>
            <if test="parentId != null and parentId !='' ">
                  and parent_id = #{parentId}
            </if>
            <if test="name != null and name !='' ">
                  and name = #{name}
            </if>
            <if test="key != null and key !='' ">
                  and key = #{key}
            </if>
            <if test="leaderUserId != null and leaderUserId !='' ">
                  and leader_user_id = #{leaderUserId}
            </if>
            <if test="status != null and status !='' ">
                  and status = #{status}
            </if>
            <if test="createUserId != null and createUserId !='' ">
                  and create_user_id = #{createUserId}
            </if>
            <if test="createTime != null ">
                  and create_time = #{createTime}
            </if>
            <if test="updateUserId != null and updateUserId !='' ">
                  and update_user_id = #{updateUserId}
            </if>
            <if test="updateTime != null ">
                  and update_time = #{updateTime}
            </if>
        </where>
        <if test="params.orderBy != null and params.orderBy != ''">
            ORDER  BY ${params.orderBy}
            <if test="params.by != null and params.by != ''">
                ${params.by}
            </if>
        </if>
    </select>


    <select id="selectByPageM" resultMap="baseResultMap">
        <include refid="selector"/>
        <where>
            <if test="model.id != null and model.id !='' ">
              and id = #{model.id}
            </if>
            <if test="model.parentId != null and model.parentId !='' ">
              and parent_id = #{model.parentId}
            </if>
            <if test="model.name != null and model.name !='' ">
              and name = #{model.name}
            </if>
            <if test="model.key != null and model.key !='' ">
              and key = #{model.key}
            </if>
            <if test="model.leaderUserId != null and model.leaderUserId !='' ">
              and leader_user_id = #{model.leaderUserId}
            </if>
            <if test="model.status != null and model.status !='' ">
              and status = #{model.status}
            </if>
            <if test="model.createUserId != null and model.createUserId !='' ">
              and create_user_id = #{model.createUserId}
            </if>
            <if test="model.createTime != null ">
              and create_time = #{model.createTime}
            </if>
            <if test="model.updateUserId != null and model.updateUserId !='' ">
              and update_user_id = #{model.updateUserId}
            </if>
            <if test="model.updateTime != null ">
              and update_time = #{model.updateTime}
            </if>
        </where>
        <if test="model.params != null and model.params.orderBy != null and model.params.orderBy != ''">
            ORDER  BY ${model.params.orderBy}
            <if test="model.params.by != null and model.params.by != ''">
                ${model.params.by}
            </if>
        </if>
        limit #{start}, #{count}
    </select>

</mapper>
