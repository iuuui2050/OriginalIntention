<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.iuuui.dao.system.SysUserPasswordDao">

	<resultMap id="baseResultMap" type="com.iuuui.domain.system.SysUserPassword">
		<result property="id" column="id" />
		<result property="userId" column="user_id" />
		<result property="password" column="password" />
		<result property="salt" column="salt" />
	</resultMap>

    <sql id="fields">  id,  user_id,  password,  salt  </sql>

    <sql id="table_name">sys_user_password</sql>

    <sql id="selector">
        select <include refid="fields"/> from <include refid="table_name"/>
    </sql>

    <delete id="deleteM">
        DELETE FROM <include refid="table_name"/>
        WHERE id = #{id}
    </delete>

    <insert id="createM" useGeneratedKeys="true" keyProperty="id" parameterType="com.iuuui.domain.system.SysUserPassword">
		INSERT INTO <include refid="table_name"/>(<include refid="fields"/>)
        VALUES (  #{id},  #{userId},  #{password},  #{salt}  )
	</insert>

    <update id="updateM" parameterType="com.iuuui.domain.system.SysUserPassword">
        UPDATE
        <include refid="table_name"/>
        <set>
            <if test="userId != null ">
              user_id = #{userId},
            </if>
            <if test="password != null ">
              password = #{password},
            </if>
            <if test="salt != null ">
              salt = #{salt}
            </if>
          </set>
        where id = #{id}
    </update>

    <select id="getByIdM" resultMap="baseResultMap">
        <include refid="selector"/>
        WHERE id = #{id}
    </select>

    <select id="countM" resultType="java.lang.Long">
        select
        count(*)
        from
        <include refid="table_name"/>
        <where>
            <if test="id != null and id !='' ">
                and id = #{id}
            </if>
            <if test="userId != null and userId !='' ">
                and user_id = #{userId}
            </if>
            <if test="password != null and password !='' ">
                and password = #{password}
            </if>
            <if test="salt != null and salt !='' ">
                and salt = #{salt}
            </if>
        </where>
</select>

    <select id="selectM" resultMap="baseResultMap">
        <include refid="selector"/>
        <where>
            <if test="id != null and id !='' ">
                  and id = #{id}
            </if>
            <if test="userId != null and userId !='' ">
                  and user_id = #{userId}
            </if>
            <if test="password != null and password !='' ">
                  and password = #{password}
            </if>
            <if test="salt != null and salt !='' ">
                  and salt = #{salt}
            </if>
        </where>
        <if test="params.orderBy != null and params.orderBy != ''">
            ORDER  BY ${params.orderBy}
            <if test="params.by != null and params.by != ''">
                ${params.by}
            </if>
        </if>
    </select>


    <select id="selectByPageM" resultMap="baseResultMap">
        <include refid="selector"/>
        <where>
            <if test="model.id != null and model.id !='' ">
              and id = #{model.id}
            </if>
            <if test="model.userId != null and model.userId !='' ">
              and user_id = #{model.userId}
            </if>
            <if test="model.password != null and model.password !='' ">
              and password = #{model.password}
            </if>
            <if test="model.salt != null and model.salt !='' ">
              and salt = #{model.salt}
            </if>
        </where>
        <if test="model.params != null and model.params.orderBy != null and model.params.orderBy != ''">
            ORDER  BY ${model.params.orderBy}
            <if test="model.params.by != null and model.params.by != ''">
                ${model.params.by}
            </if>
        </if>
        limit #{start}, #{count}
    </select>

</mapper>
